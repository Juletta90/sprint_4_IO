# Напишите функцию list_superset(), которая принимает два списка и определяет,
# служит ли один из списков супермножеством для другого.
# Функция должна вернуть строку с одним из сообщений:
# В случае, если один из списков является супермножеством для другого:
# Набор [содержимое_набора] - супермножество.
# Если списки содержат одинаковый набор элементов, пусть и в разном порядке:
# Наборы равны.
# Если ни один из списков не является супермножеством для другого:
# Супермножество не обнаружено.

# Например:
# Множество [1, 3, 5, 7] — это супермножество по отношению к [3, 5].
# Множество [5, 3, 7, 1] — это супермножество по отношению к [3, 5].
# Множества [1, 3, 5, 7] и [5, 3, 7, 1] равны.

import collections

def list_superset(list_set_1, list_set_2):

    # проверка, какой список длиннее - в том и ищем вложение другого списка
    if len(list_set_1) > len(list_set_2):
        for i in list_set_1:
            if i in list_set_2:
                return f'Набор {list_set_1} - супермножество.'

    elif len(list_set_1) < len(list_set_2):
        for i in list_set_2:
            if i in list_set_1:
                return f'Набор {list_set_2} - супермножество.'

    if collections.Counter(list_set_1) == collections.Counter(list_set_2):
        return f'Наборы равны.'
    else:
        return f'Супермножество не обнаружено.'


    # if list_set_1.sort() == list_set_2.sort():
    #     return f'Наборы равны'
    # else:
    #     return f'Супермножество не обнаружено.'


    # if set(list_set_1) == set(list_set_2):
    #     return f'Наборы равны'
    # else:
    #     return f'Супермножество не обнаружено.'



# Примеры для проверки функции.
list_set_1 = [1, 3, 5, 7]
list_set_2 = [3, 5]
list_set_3 = [5, 3, 7, 1]
list_set_4 = [5, 6]

print(list_superset(list_set_1, list_set_2))
# Набор [1, 3, 5, 7] - супермножество.

print(list_superset(list_set_2, list_set_3))
# Набор [5, 3, 7, 1] - супермножество.

print(list_superset(list_set_1, list_set_3))
# Наборы равны.

print(list_superset(list_set_2, list_set_4))
# Супермножество не обнаружено.

